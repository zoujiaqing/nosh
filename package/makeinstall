#!/bin/sh -e
# See http://jdebp.eu./FGA/slashpackage.html
if [ \! -d package ] || [ \! -d source ]
then
	echo "You are not in the right directory." 1>&2
	exit 100
fi
if [ \! -d build ]
then
	echo "You have not prepared the build area." 1>&2
	exit 100
fi

export CDPATH=

# Atomically update the release directories ./command, ./library, ./include, and so forth.
# The build and release directories need not be on the same disc volume.
# And the files released must not be potentially overwritable and truncatable by the compiler/linker during subsequent builds.
# But released files can be links to other released files, of course.
install -d -m 0755 command manual config guide guide/services guide/commands guide/convert

# ##############################################################################
# Build all of the ...{new} files in ./command and ./manual.
cat package/commands1 package/commands8 |
while read -r i
do
	rm -f -- command/"$i"{new}
	if objdump -f build/"$i" >/dev/null 2>&1
	then
		install -m 0755 -p -- build/"$i" command/"$i"{new}
		strip -p -- command/"$i"{new}
		chmod a-w command/"$i"{new}
	else
		install -m 0555 -p -- build/"$i" command/"$i"{new}
	fi
done
cat package/aliases1 package/aliases8 |
while read -r command alias
do
	rm -f -- command/"${alias}"{new}
	ln -f -- command/"${command}"{new} command/"${alias}"{new}
done
# Main guide pages
cat package/guidepages | 
while read -r i
do
	rm -f -- guide/"$i".html{new}
	install -m 0444 -p -- build/"$i".html guide/"$i".html{new}
done
for i in COPYING
do
	rm -f -- guide/"$i"{new}
	install -m 0444 -p -- build/"$i" guide/"$i"{new}
done
for i in docbook-xml.css
do
	rm -f -- guide/commands/"$i"{new}
	install -m 0444 -p -- build/"$i" guide/commands/"$i"{new}
done
# All of the commands that have their own manual and guide pages
for section in 1 8
do
	cat package/commands${section} package/extra-manpages${section} | 
	while read -r i
	do
		rm -f -- manual/"$i".${section}{new}
		install -m 0444 -p -- build/"$i".${section} manual/"$i".${section}{new}
		rm -f -- guide/"$i".html{new}
		install -m 0444 -p -- build/"$i".html guide/"$i".html{new}
		rm -f -- guide/commands/"$i".xml{new}
		install -m 0444 -p -- build/"$i".xml guide/commands/"$i".xml{new}
	done
done
# Aliased manual and guide pages
for section in 1 7 8
do
	cat package/aliases${section} | 
	while read -r command alias
	do
		grep -q -- "^${alias}\$" package/commands${section} package/extra-manpages${section} && continue
		ln -f -s -- "${command}".${section} manual/"${alias}".${section}{new}
		ln -f -s -- "${command}".html guide/"${alias}".html{new}
		ln -f -s -- "${command}".xml guide/commands/"${alias}".xml{new}
	done
done
# Other manual and guide pages
for section in 3 4 7
do
	cat package/extra-manpages${section} | 
	while read -r i
	do
		rm -f -- manual/"$i".${section}{new}
		install -m 0444 -p -- build/"$i".${section} manual/"$i".${section}{new}
	done
	cat package/extra-manpages${section} | 
	while read -r i
	do
		rm -f -- guide/"$i".html{new}
		install -m 0444 -p -- build/"$i".html guide/"$i".html{new}
		rm -f -- guide/commands/"$i".xml{new}
		install -m 0444 -p -- build/"$i".xml guide/commands/"$i".xml{new}
	done
done

# ##############################################################################
# Rename the ...{new} files in ./command and ./manual.
(
	cat package/commands1 package/commands8 
	awk '{print $2;}' package/aliases1 package/aliases8 
) |
while read -r i
do
	mv -f -- command/"$i"{new} command/"$i"
done
# Main guide pages
cat package/guidepages |
while read -r i
do
	mv -f -- guide/"$i".html{new} guide/"$i".html
done
for i in COPYING
do
	mv -f -- guide/"$i"{new} guide/"$i"
done
for i in docbook-xml.css
do
	mv -f -- guide/commands/"$i"{new} guide/commands/"$i"
done
# All of the commands that have their own manual and guide pages
for section in 1 8
do
	cat package/commands${section} package/extra-manpages${section} | 
	while read -r i
	do
		mv -f -- manual/"$i".${section}{new} manual/"$i".${section}
	done
	cat package/commands${section} package/extra-manpages${section} | 
	while read -r i
	do
		mv -f -- guide/"$i".html{new} guide/"$i".html
		mv -f -- guide/commands/"$i".xml{new} guide/commands/"$i".xml
	done
done
# Aliased manual and guide pages
for section in 1 7 8
do
	cat package/aliases${section} | 
	while read -r command alias
	do
		grep -q -- "^${alias}\$" package/commands${section} package/extra-manpages${section} && continue
		mv -f -- manual/"${alias}".${section}{new} manual/"${alias}".${section}
	done
	cat package/aliases${section} | 
	while read -r command alias
	do
		grep -q -- "^${alias}\$" package/commands${section} package/extra-manpages${section} && continue
		mv -f -- guide/"${alias}".html{new} guide/"${alias}".html
		mv -f -- guide/commands/"${alias}".xml{new} guide/commands/"${alias}".xml
	done
done
# Other manual and guide pages
for section in 3 4 7
do
	cat package/extra-manpages${section} | 
	while read -r i
	do
		mv -f -- manual/"$i".${section}{new} manual/"$i".${section}
	done
	cat package/extra-manpages${section} | 
	while read -r i
	do
		mv -f -- guide/"$i".html{new} guide/"$i".html
		mv -f -- guide/commands/"$i".xml{new} guide/commands/"$i".xml
	done
done

# ##############################################################################
# Build all of the {new} directories in ./config.
rm -rf -- config/targets{new} config/services{new}
install -d -m 0755 config/targets{new} config/services{new}
while read -r i
do
	( cd build/targets/ && pax -r -w $i ../../config/targets{new}/ )
done < package/standard-targets
while read -r i
do
	( cd build/services/ && pax -r -w mount@$i fsck@$i ../../config/services{new}/ )
done < package/common-mounts
(
	cat package/common-etc-services 
	case "`uname`" in
	Linux)	cat package/linux-etc-services ;;
	*BSD)	cat package/bsd-etc-services ;;
	esac
) |
while read -r i
do
	( cd build/services/ && pax -r -w $i ../../config/services{new}/ )
done
(
	cat package/common-services package/common-sockets package/common-timers package/common-ttys 
	case "`uname`" in
	Linux)	cat package/linux-services package/linux-sockets package/linux-timers package/linux-ttys ;;
	OpenBSD)	cat package/bsd-services package/bsd-sockets package/openbsd-timers package/openbsd-ttys ;;
	NetBSD)	cat package/bsd-services package/bsd-sockets package/netbsd-timers package/netbsd-ttys ;;
	*BSD)	cat package/bsd-services package/bsd-sockets package/bsd-timers package/bsd-ttys ;;
	esac
) |
while read -r i
do
	( cd build/services/ && pax -r -w $i cyclog@$i ../../config/services{new}/ )
done
(
	cat package/common-service-aliases 
	case "`uname`" in
	Linux) cat package/linux-service-aliases ;;
	OpenBSD) cat package/openbsd-service-aliases ;;
	*BSD) cat package/bsd-service-aliases ;;
	esac
) |
while read -r service alias
do
	ln -s "${service}" config/services{new}/"${alias}"
	ln -s cyclog@"${service}" config/services{new}/cyclog@"${alias}"
done
(
	cat package/common-target-aliases 
	case "`uname`" in
	Linux) cat package/linux-target-aliases ;;
	OpenBSD) cat package/openbsd-target-aliases ;;
	*BSD) cat package/bsd-target-aliases ;;
	esac
) |
while read -r service alias
do
	ln -s "${service}" config/targets{new}/"${alias}"
done
(
	cat package/common-etc-service-aliases 
	case "`uname`" in
	Linux)	cat package/linux-etc-service-aliases ;;
	*BSD)	cat package/bsd-etc-service-aliases ;;
	esac
) |
while read -r service alias
do
	ln -s "${service}" config/services{new}/"${alias}"
done

# ##############################################################################
# Build all of the {new} files in ./config.
install -d -m 0755 config/presets config/systemd config/systemd/tmpfiles config/systemd/system config/systemd/user config/convert config/convert/kbdmaps config/convert/dbus config/convert/per-user config/convert/per-user/dbus config/convert/termcap config/mewburn-rc.d config/open-rc.d config/openbsd-rc.d config/vt config/devd config/zsh config/service-generators config/etc config/cin-data-tables
cat package/tmpfiles-snippets |
while read -r i
do
	rm -f -- config/systemd/tmpfiles/"$i"{new}
	install -m 0444 -p -- build/systemd/tmpfiles/"$i" config/systemd/tmpfiles/"$i"{new}
done
cat package/systemd-system-services |
while read -r i
do
	rm -f -- config/systemd/system/"$i"{new}
	install -m 0444 -p -- build/systemd/system/"$i" config/systemd/system/"$i"{new}
done
cat package/systemd-system-overrides |
while read -r i
do
	rm -f -- config/systemd/system/"$i"{new}
	install -d -m 0755 config/systemd/system/"`dirname "$i"`"
	install -m 0444 -p -- build/systemd/system/"$i" config/systemd/system/"$i"{new}
done
cat package/systemd-user-services |
while read -r i
do
	rm -f -- config/systemd/user/"$i"{new}
	install -m 0444 -p -- build/systemd/user/"$i" config/systemd/user/"$i"{new}
done
(
	for i in bundles run-via-systemd run-via-mewburn-rc run-via-open-rc run-via-openbsd-rc run-debian-desktop-base run-debian-server-base run-virtualbox-guest run-freedesktop-system-bus run-freedesktop-kits run-openssh-server run-user-vt run-kernel-vt run-appletalk run-systemd-udev run-udev run-busybox-mdev run-suckless-mdev run-mdevd run-vdev run-local-syslog run-klog run-trueos-desktop-base run-trueos-server-base run-freebsd-desktop-base run-freebsd-server-base run-bcron
	do
		test \! -r package/common-nosh-"$i"-presets || cat package/common-nosh-"$i"-presets 
		test \! -r package/linux-nosh-"$i"-presets || cat package/linux-nosh-"$i"-presets 
		test \! -r package/bsd-nosh-"$i"-presets || cat package/bsd-nosh-"$i"-presets 
	done
) | awk '!x[$0]++' | while read i
do
	rm -f -- config/presets/"$i"{new}
	install -m 0444 -p -- build/presets/"$i" config/presets/"$i"{new}
done
while read -r i
do
	rm -f -- config/mewburn-rc.d/"$i"{new}
	install -m 0555 -p -- build/mewburn-rc.d/"$i" config/mewburn-rc.d/"$i"{new}
done < package/mewburn-rc-scripts
while read -r i
do
	rm -f -- config/open-rc.d/"$i"{new}
	install -m 0555 -p -- build/open-rc.d/"$i" config/open-rc.d/"$i"{new}
done < package/open-rc-scripts
while read -r i
do
	rm -f -- config/openbsd-rc.d/"$i"{new}
	install -m 0555 -p -- build/openbsd-rc.d/"$i" config/openbsd-rc.d/"$i"{new}
done < package/openbsd-rc-scripts
while read -r i
do
	rm -f -- config/convert/"$i"{new}
	case "$i" in
	*.do)
		install -m 0555 -p -- build/convert/"$i" config/convert/"$i"{new}
		;;
	*)
		install -m 0444 -p -- build/convert/"$i" config/convert/"$i"{new}
		;;
	esac
done < package/conversion-tools
for i in issue.vc
do
	rm -f -- config/vt/"$i"{new}
	install -m 0444 -p -- build/"$i" config/vt/"$i"{new}
done 
for i in _nosh _console_terminal_emulator _system_control
do
	rm -f -- config/zsh/"$i"{new}
	install -m 0444 -p -- build/zsh/"$i" config/zsh/"$i"{new}
done 
for i in cyclog@.service kmod@.service
do
	rm -f -- config/service-generators/"$i"{new}
	install -m 0444 -p -- build/services/"$i" config/service-generators/"$i"{new}
done 
for i in no-anacron anacron
do
	rm -f -- config/etc/crontab.debian."$i"{new}
	install -m 0444 -p -- build/bcron/crontab.debian."$i" config/etc/crontab.debian."$i"{new}
done 
while read -r i
do
	rm -f -- config/cin-data-tables/"$i"{new}
	install -m 0444 -p -- build/cin-data-tables/"$i" config/cin-data-tables/"$i"{new}
done < package/cin-data-tables
# Plug and Play manager rulesets
cat package/devd-rules |
while read -r i
do
	rm -f -- config/devd/"$i".conf{new}
	install -m 0444 -p -- build/devd/"$i".conf config/devd/"$i".conf{new}
done

# ##############################################################################
# Rename the ...{new} directories and files in ./config.
cat package/tmpfiles-snippets |
while read -r i
do
	mv -f -- config/systemd/tmpfiles/"$i"{new} config/systemd/tmpfiles/"$i"
done 
cat package/systemd-system-services |
while read -r i
do
	mv -f -- config/systemd/system/"$i"{new} config/systemd/system/"$i"
done 
cat package/systemd-system-overrides |
while read -r i
do
	mv -f -- config/systemd/system/"$i"{new} config/systemd/system/"$i"
done
cat package/systemd-user-services |
while read -r i
do
	mv -f -- config/systemd/user/"$i"{new} config/systemd/user/"$i"
done 
(
for i in bundles run-via-systemd run-via-mewburn-rc run-via-open-rc run-via-openbsd-rc run-debian-desktop-base run-debian-server-base run-virtualbox-guest run-freedesktop-system-bus run-freedesktop-kits run-openssh-server run-user-vt run-kernel-vt run-appletalk run-systemd-udev run-udev run-busybox-mdev run-suckless-mdev run-mdevd run-vdev run-local-syslog run-klog run-trueos-desktop-base run-trueos-server-base run-freebsd-desktop-base run-freebsd-server-base run-bcron
do
	test \! -r package/common-nosh-$i-presets || cat package/common-nosh-"$i"-presets 
	test \! -r package/linux-nosh-$i-presets || cat package/linux-nosh-"$i"-presets 
	test \! -r package/bsd-nosh-$i-presets || cat package/bsd-nosh-"$i"-presets 
done
) | awk '!x[$0]++' | while read i
do
	mv -f -- config/presets/"$i"{new} config/presets/"$i"
done 
while read -r i
do
	mv -f -- config/mewburn-rc.d/"$i"{new} config/mewburn-rc.d/"$i"
done < package/mewburn-rc-scripts
while read -r i
do
	mv -f -- config/open-rc.d/"$i"{new} config/open-rc.d/"$i"
done < package/open-rc-scripts
while read -r i
do
	mv -f -- config/openbsd-rc.d/"$i"{new} config/openbsd-rc.d/"$i"
done < package/openbsd-rc-scripts
while read -r i
do
	mv -f -- config/convert/"$i"{new} config/convert/"$i"
done < package/conversion-tools
for i in targets services
do
	test -e config/"$i" && mv -f -- config/"$i" config/"$i"{old}
	mv -f -- config/"$i"{new} config/"$i"
	rm -rf -- config/"$i"{old}
done
for i in issue.vc
do
	mv -f -- config/vt/"$i"{new} config/vt/"$i"
done 
for i in _nosh _console_terminal_emulator _system_control
do
	mv -f -- config/zsh/"$i"{new} config/zsh/"$i"
done 
for i in cyclog@.service kmod@.service
do
	mv -f -- config/service-generators/"$i"{new} config/service-generators/"$i"
done 
for i in no-anacron anacron
do
	mv -f -- config/etc/crontab.debian."$i"{new} config/etc/crontab.debian."$i"
done 
while read -r i
do
	mv -f -- config/cin-data-tables/"$i"{new} config/cin-data-tables/"$i"
done < package/cin-data-tables
# Plug and Play manager rulesets
cat package/devd-rules |
while read -r i
do
	mv -f -- config/devd/"$i".conf{new} config/devd/"$i".conf
done
