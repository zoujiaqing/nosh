<?xml version="1.0" encoding="UTF-8"?>
<!-- **************************************************************************
.... For copyright and licensing terms, see the file named COPYING.
.... **************************************************************************
.-->
<?xml-stylesheet href="docbook-xml.css" type="text/css"?>

<refentry id="setlock">

<refmeta xmlns:xi="http://www.w3.org/2001/XInclude">
<refentrytitle>setlock</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class="manual">user commands</refmiscinfo>
<refmiscinfo class="source">nosh</refmiscinfo>
<xi:include href="version.xml" />
</refmeta>

<refnamediv><refname>setlock</refname><refpurpose>open an exclusive lock file then chain</refpurpose></refnamediv>

<refsynopsisdiv>
<cmdsynopsis>
<command>setlock</command> 
<arg choice='opt'>--non-blocking</arg> 
<arg choice='opt'>--ignore</arg> 
<arg choice='req'><replaceable>file</replaceable></arg> 
<arg choice='req'><replaceable>next-prog</replaceable></arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsection><title>Description</title>

<para>
<command>setlock</command> is a chain-loading utility that opens the lock file named <replaceable>file</replaceable> leaving an open file descriptor in the current process and then chain loads to <replaceable>next-prog</replaceable> with the <citerefentry><refentrytitle>execvp</refentrytitle><manvolnum>3</manvolnum></citerefentry> function.  
</para>

<para>
<replaceable>next-prog</replaceable> may contain its own command line options, which <command>setlock</command> will ignore.
</para>

<para>
How the lockfile works is system dependent.
The lock remains active whilst the file descriptor remains open in any process.
Closing the file descriptor, by exiting the process or otherwise, is the only portable operation allowed.
It is unspecified what access rights the file descriptor has for the lock file, or whether the descriptor is in blocking mode.
</para>

<para>
<command>setlock</command> does not read from or write to the lockfile.
On platforms where the implementation (discussed further on) permits locking special files, this allows using such files as lockfiles.
Note, however, that since the file access is unspecified, it is unspecified whether using a FIFO with no reader open as a lockfile will work.
</para>

<para>
Unless the <arg choice='plain'>--non-blocking</arg> command line option is used, <command>setlock</command> will wait to obtain the lock whilst another process holds it.  
If that option is used, it will not wait, but instead will fail to acquire the lock.
</para>

<para>
Unless the <arg choice='plain'>--ignore</arg> option is used, failure to acquire the lock, because it isn't a valid lock file, because someone else has the lock and non-blocking mode has been used, or for some other reason, will cause <command>setlock</command> to print an error message and exit with a failure status instead of chaining.
If that option is used, it will still exit on failure, but without printing an error message and with a success status.
</para>

</refsection><refsection><title>Unreliable implementation details</title>

<para>
On the BSDs and Linux, locking is based upon the <citerefentry><refentrytitle>flock</refentrytitle><manvolnum>2</manvolnum></citerefentry> system call.
On such systems, explicitly unlocking the file with <citerefentry><refentrytitle>flock</refentrytitle><manvolnum>2</manvolnum></citerefentry> will also deactivate the lock.
</para>

</refsection><refsection><title>Author</title>
<para><author><personname><firstname>Jonathan</firstname> <surname>de Boyne Pollard</surname></personname></author></para>
</refsection>

</refentry>
